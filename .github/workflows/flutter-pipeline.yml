name: Flutter Pipeline

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  flutter-web-build:
    name: Build Flutter App for Web
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Build Number
        id: build_number
        uses: ./.github/actions/extract-build-number
        with:
          tag: ${{ github.ref_name }}
          shell-type: bash

      - name: Setup Flutter
        uses: ./.github/actions/configure-flutter
        with:
          flutter-version: latest
          shell-type: bash

      - name: Configure Firebase
        uses: ./.github/actions/configure-firebase
        with:
          node-version: ${{ matrix.node }}
          firebase-version: ${{ vars.FIREBASE_VERSION }}
          shell-type: bash

      - name: Configure FlutterFire for Web
        uses: ./.github/actions/configure-flutterfire
        with:
          platforms: web
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}
          firebase-project-id: ${{ secrets.FIREBASE_PROJECT_ID }}
          shell-type: bash

      - name: Build Code with build_runner
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Build Flutter Web
        run: |
          flutter build web --wasm \
          --build-name=${{ steps.build_number.outputs.build_number }} \
          --build-number=$GITHUB_RUN_NUMBER \
          --dart-define=BUILD_VERSION=${{ steps.build_number.outputs.build_number }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-web-build
          path: build/web

  github-pages:
    name: Build GitHub Pages
    runs-on: ubuntu-latest
    needs: flutter-web-build

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: flutter-web-build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build Pages
        uses: actions/jekyll-build-pages@v1

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    name: Deploy GitHub Pages
    runs-on: ubuntu-latest
    needs: github-pages

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
  
  flutter-android:
    name: Build & Deploy Flutter App for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Extract Build Number
        id: build_number
        uses: ./.github/actions/extract-build-number
        with:
          tag: ${{ github.ref_name }}
          shell-type: bash

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties

      - name: Decode and Restore Keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/upload-keystore.jks

      - name: Setup Flutter
        uses: ./.github/actions/configure-flutter
        with:
          flutter-version: latest
          shell-type: bash

      - name: Configure Firebase
        uses: ./.github/actions/configure-firebase
        with:
          node-version: ${{ matrix.node }}
          firebase-version: ${{ vars.FIREBASE_VERSION }}
          shell-type: bash

      - name: Configure FlutterFire for Android
        uses: ./.github/actions/configure-flutterfire
        with:
          platforms: android
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}
          firebase-project-id: ${{ secrets.FIREBASE_PROJECT_ID }}
          shell-type: bash

      - name: Build Code with build_runner
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Build Android APK
        run: | 
          flutter build apk \
          --flavor ${{ vars.FLAVOR }} \
          --build-name=${{ steps.build_number.outputs.build_number }} \
          --build-number=$GITHUB_RUN_NUMBER \
          --dart-define=BUILD_VERSION=${{ steps.build_number.outputs.build_number }}

      - name: Upload Build Android APK
        uses: actions/upload-artifact@v4
        with:
          name: flutter-android-build
          path: build/app/outputs/flutter-apk/app-${{ vars.FLAVOR }}-release.apk

      - name: Upload APK to Firebase
        run: |
          firebase appdistribution:distribute \
          build/app/outputs/flutter-apk/app-${{ vars.FLAVOR }}-release.apk \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --groups ${{ secrets.FIREBASE_TESTER_GROUPS }} \
          --token ${{ secrets.FIREBASE_TOKEN }}

#  flutter-ios:
#    name: Build & Deploy Flutter App for iOS
#    runs-on: macos-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      - name: Setup Flutter
#        uses: ./.github/actions/configure-flutter
#        with:
#          flutter-version: latest
#          shell-type: bash
#
#      - name: Configure Firebase
#        uses: ./.github/actions/configure-firebase
#        with:
#          node-version: ${{ matrix.node }}
#          shell-type: bash
#
#      - name: Configure FlutterFire for Android
#        uses: ./.github/actions/configure-flutterfire
#        with:
#          platforms: android
#          firebase-token: ${{ secrets.FIREBASE_TOKEN }}
#          firebase-project-id: ${{ secrets.FIREBASE_PROJECT_ID }}
#          shell-type: bash
#
#      - name: Build Code with build_runner
#        run: dart run build_runner build --delete-conflicting-outputs
#
#      - name: Build iOS IPA
#        run: flutter build ios --release
#
#      - name: Upload Build iOS IPA
#        uses: actions/upload-artifact@v4
#        with:
#          name: flutter-ios-build
#          path: build/ios/Runner/Runner.ipa
#
#      - name: Upload IPA to Firebase
#        run: |
#          firebase appdistribution:distribute \
#          build/ios/Runner/Runner.ipa \
#          --app ${{ secrets.FIREBASE_APP_ID }} \
#          --groups ${{ secrets.FIREBASE_TESTER_GROUPS }} \
#          --token ${{ secrets.FIREBASE_TOKEN }}
